services:
  db:
    image: postgis/postgis:latest
    environment:
      POSTGRES_DB: man_db
      POSTGRES_USER: man_user
      POSTGRES_PASSWORD: Y8ksKX2uqdHEepzW8s9*vX@LbANPVbrQgfgzpRgP@dJATFKCfQ6de@n3g6GYeL-yrh3Mp!CKa-hQdUM
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
  django:
    build:
      context: .
      dockerfile: Dockerfile

    command: >
      bash -c "cd /app/backend && 
      /usr/local/bin/wait-for-it.sh db:5432 -t 15 -- 
      pipenv run python manage.py makemigrations maritimeapp &&
      pipenv run python manage.py migrate &&
      pipenv run python manage.py populate &&
      pipenv run gunicorn -b 0.0.0.0:8000 --limit-request-line 0 mandatabase.wsgi:application"
    environment:
      DJANGO_DB_HOST: db
      DJANGO_DB_PORT: 5432
      DJANGO_DB_NAME: man_db
      DJANGO_DB_USER: man_user
      DJANGO_DB_PASS: Y8ksKX2uqdHEepzW8s9*vX@LbANPVbrQgfgzpRgP@dJATFKCfQ6de@n3g6GYeL-yrh3Mp!CKa-hQdUM
      DJANGO_SECRET_KEY: 64*39&)axn)l1ik_90h=yz(8#ttn^wo%%y&$ed+y*r2l(9v--@s
    depends_on:
      - db
    ports:
      - "8000:8000"
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "cd /app/frontend && npm start"
    depends_on:
      - django
    ports:
      - "3000:3000"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    depends_on:
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
